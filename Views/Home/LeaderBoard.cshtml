@using MatchBetting.ViewModels
@model List<global::MatchBetting.ViewModels.LeaderBoardByUserViewModel>?
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var currentMatches = (List<MatchViewModel>)ViewBag.CurrentMatches;
}

<div class="container">
    <div class="row">
        <div class="col-md-2 text-center">
            <img src="~/img/uefa_euro_2024_logo.svg.png" alt="UEFA EURO 2024 Logo" class="img-fluid" style="max-width: 100px; height: auto;" />
        </div>
        <!-- Table Column -->
        <div class="col-md-6">
            @if (Model != null)
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered">
                        <thead>
                            <tr>
                                <th>Deltakar</th>
                                <th>P</th>
                                @foreach (var match in currentMatches)
                                {
                                    <th title="@match.MatchId" style="text-align: center;">
                                        <img src="@match.HomeTeamLogoUrl" alt="Team Logo" width="16" height="16" id="HomeTeamLogo_@match.MatchId">@match.HomeTeam
                                        <br />
                                        <img src="@match.AwayTeamLogoUrl" alt="Team Logo" width="16" height="16" id="AwayTeamLogo_@match.MatchId">@match.AwayTeam
                                        <br />
                                        <span id="HomeScore90_@match.MatchId">@match.HomeScore90</span>
                                        -
                                        <span id="AwayScore90_@match.MatchId">@match.AwayScore90</span>
                                    </th>
@*                                     <script id="MatchScript_@match.MatchId">
                                        $(function () {

                                            var intervalId = setInterval(function () {
                                                FetchMatch(@match.MatchId, intervalId);
                                            }, 15000); 
                                        });
                                    </script> *@
                                }

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.OrderByDescending(o => o.Score))
                            {
                                <tr>
                                    <td>@user.UserName</td>
                                    <td>@user.Score</td>
                                    @foreach (var betting in user.CurrentBettings)
                                    {
                                        var match = currentMatches.FirstOrDefault(cm => cm.MatchId == betting.MatchId);
                                        var resultClass = match != null && match.Result == betting.Result ? "text-success fw-bold" : "text-danger fw-bold";

                                        <td title="@betting.MatchId" class="@resultClass" style="text-align: center;">@betting.Result</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
        <!-- Right Logo Column -->
        <div class="col-md-2 text-center">
            <img src="~/img/uefa_euro_2024_logo.svg.png" alt="UEFA EURO 2024 Logo" class="img-fluid" style="max-width: 100px; height: auto;" />
        </div>
    </div>
</div>
<script>
    function FetchMatch(matchId, intervalId) {
        var shouldBeStopped = false;

        $.ajax({
            method: "GET",
            url: `/Home/FetchMatch?matchId=${matchId}`,
            dataType: 'json',
            success: function (data) {
                $(`#HomeScore90_${matchId}`).html(data.result.homeScore90);
                $(`#AwayScore90_${matchId}`).html(data.result.awayScore90);

                if (data.matchStatusId == 1) {
                    clearInterval(intervalId);
                    console.log("Match finished. Stopping interval")
                }
            },
            error: function (error) {

            }
        });

    }
</script>